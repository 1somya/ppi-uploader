import com.sun.javafx.scene.CameraHelper

group 'org.mifos.tools'
version '0.1.0'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE'
    }
}

ext.versions = [
        springboot: '1.3.1.RELEASE',
        okhttp: '2.0.0',
        retrofit: '1.6.1',
        gson: '2.5',
        logback: '1.1.3',
        slf4j: '1.7.13',
        findbugs: '3.0.1',
        junit: '4.12',
        springtest: '1.3.1.RELEASE'
]

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'license'
apply plugin: 'spring-boot'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

repositories {
    jcenter()
}

dependencies {
    compile(
            [group: 'org.springframework.boot', name: 'spring-boot-starter', version: versions.springboot],
            [group: 'com.squareup.okhttp', name: 'okhttp', version: versions.okhttp],
            [group: 'com.squareup.okhttp', name: 'okhttp-urlconnection', version: versions.okhttp],
            [group: 'com.squareup.retrofit', name: 'retrofit', version: versions.retrofit],
            [group: 'com.google.code.gson', name: 'gson', version: versions.gson],
            [group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback],
            [group: 'org.slf4j', name: 'jcl-over-slf4j', version: versions.slf4j],
            [group: 'com.google.code.findbugs', name: 'jsr305', version: versions.findbugs]
    )

    testCompile (
            [group: 'junit', name: 'junit', version: '4.12'],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springtest]
    )
}

configurations {
    compile.exclude group: 'commons-logging', module: 'commons-logging'
}

license {
    header project.file('HEADER')
    strictCheck true
    exclude "**/*.json"
    exclude "**/*.yaml"
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

